@inherits CustomBaseComponent
@page "/dashboard"
@page "/dashboard/{AddressParameter}"
@inject IDispatcher _dispatcher
@inject IState<Flux.Sales.State> _saleState
@inject IState<Flux.Prices.State> _pricesState
@inject IState<Flux.User.State> _state
@inject NavigationManager _navigation

<PageTitle>Avalaunch Dashboard</PageTitle>
<MudCard>
    <MudCardHeader>
        <MudTextField @bind-Value="Address" Immediate=true Label="Address" Variant="Variant.Outlined"
            Disabled="_state.Value.Loading" Counter="42" HelperText="C-chain wallet address">
        </MudTextField>
        <MudButton OnClick="LoadData" Disabled="Loading">Load</MudButton>
        <MudButton OnClick="RefreshData" Disabled="Loading">Refresh</MudButton>
    </MudCardHeader>
    <MudCardContent>
        @if (IsNotValidAddress)
        {
            <MudText Color=Color.Warning>Enter a valid c-chain address</MudText>
        }
        else
        {
            <MudText>Last update : @_state.Value.Data.LastUpdated.ToLocalDateTimeString()</MudText>
            <MudText>Total Claimable : $@DashboardData.Data.Sum(x=>x.AvailableUsdAmount).ToString("N3")
                (@ConvertToAvax(DashboardData.Data.Sum(x=>x.AvailableUsdAmount)).ToString("N3") AVAX)</MudText>
            <MudText>Total Locked : $@DashboardData.Data.Sum(x=>x.LockedUsdAmount).ToString("N3")
                (@ConvertToAvax(DashboardData.Data.Sum(x=>x.LockedUsdAmount)).ToString("N3") AVAX)</MudText>
            <MudTable Items="@DashboardData.Data" Dense="true" Hover="true" Bordered="false" Striped="true"
            Loading="@Loading">
                <HeaderContent>
                    <MudTh>Symbol</MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<DashboardDataItem, object>(x=>x.TotalTokens)">Total Amount
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<DashboardDataItem, object>(x=>x.ClaimedPercent)">Claimed
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<DashboardDataItem, object>(x=>x.AvailablePercent)">Claimable
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<DashboardDataItem, object>(x=>x.LockedUsdAmount)">Locked
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel InitialDirection="SortDirection.Descending"
                        SortBy="new Func<DashboardDataItem, object>(x=>x.AvailablePercent)">Claimable Usd
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<DashboardDataItem, object>(x=>x.AvailablePercent)">Claimable
                            Avax</MudTableSortLabel>
                    </MudTh>
                    <MudTh>
                        <MudTableSortLabel SortBy="new Func<DashboardDataItem, object>(x=>x.LockedUsdAmount)">Locked Usd
                        </MudTableSortLabel>
                    </MudTh>
                    <MudTh>Token price</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="TokenSymbol">@GetTokenSymbol(context.SaleContractAddress)</MudTd>
                    <MudTd Style="text-align:right" DataLabel="totalavax">@context.TotalTokens.ToString("N")</MudTd>
                    <MudTd Style="text-align:right" DataLabel="claimed">@context.ClaimedPercent.ToString("P2")</MudTd>
                    <MudTd Style="text-align:right" DataLabel="available">@context.AvailablePercent.ToString("P2")</MudTd>
                    <MudTd Style="text-align:right" DataLabel="locked">@((1 - context.AvailablePercent -
                    context.ClaimedPercent).ToString("P2"))</MudTd>
                    <MudTd Style="text-align:right" DataLabel="ClaimableUsd">@context.AvailableUsdAmount.ToString("N3")
                    </MudTd>
                    <MudTd Style="text-align:right" DataLabel="ClaimableAvax">
                        @ConvertToAvax(context.AvailableUsdAmount).ToString("N5")</MudTd>
                    <MudTd Style="text-align:right" DataLabel="LockedUsd">@context.LockedUsdAmount.ToString("N3") </MudTd>
                    <MudTd Style="text-align:right" DataLabel="TokenPrice">$@GetTokenPrice(context).ToString("N6")</MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager />
                </PagerContent>
            </MudTable>
        }
    </MudCardContent>
</MudCard>